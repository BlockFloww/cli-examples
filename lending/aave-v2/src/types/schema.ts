// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import { Document } from "@blockflow-labs/utils";

export class Protocol {
  static entity = "Protocol";
  static schema = {
    id: { type: "String", index: true },
    pools: ["string"],
    entityId: { type: "String", index: true },
    blocknumber: { type: "Number", index: true },
    chainId: { type: "String", index: true },
  };
}

export class ContractToPoolMapping {
  static entity = "ContractToPoolMapping";
  static schema = {
    id: { type: "String", index: true },
    pool: "string",
    entityId: { type: "String", index: true },
    blocknumber: { type: "Number", index: true },
    chainId: { type: "String", index: true },
  };
}

export class PoolConfigurationHistoryItem {
  static entity = "PoolConfigurationHistoryItem";
  static schema = {
    id: { type: "String", index: true },
    active: "Boolean",
    pool: "string",
    lendingPool: "string",
    lendingPoolCollateralManager: "string",
    lendingPoolConfiguratorImpl: "string",
    lendingPoolImpl: "string",
    lendingPoolConfigurator: "string",
    proxyPriceProvider: "string",
    lendingRateOracle: "string",
    configurationAdmin: "string",
    timestamp: "string",
    entityId: { type: "String", index: true },
    blocknumber: { type: "Number", index: true },
    chainId: { type: "String", index: true },
  };
}

export class Pool {
  static entity = "Pool";
  static schema = {
    id: { type: "String", index: true },
    protocol: "string",
    lendingPool: "string",
    lendingPoolCollateralManager: "string",
    lendingPoolConfiguratorImpl: "string",
    lendingPoolImpl: "string",
    lendingPoolConfigurator: "string",
    proxyPriceProvider: "string",
    lendingRateOracle: "string",
    configurationAdmin: "string",
    ethereumAddress: "string",
    emergencyAdmin: "string",
    history: ["string"],
    lastUpdateTimestamp: "number",
    reserves: ["string"],
    depositHistory: ["string"],
    redeemUnderlyingHistory: ["string"],
    borrowHistory: ["string"],
    swapHistory: ["string"],
    usageAsCollateralHistory: ["string"],
    rebalanceStableBorrowRateHistory: ["string"],
    repayHistory: ["string"],
    flashLoanHistory: ["string"],
    liquidationCallHistory: ["string"],
    active: "Boolean",
    paused: "Boolean",
    entityId: { type: "String", index: true },
    blocknumber: { type: "Number", index: true },
    chainId: { type: "String", index: true },
  };
}

export class PriceHistoryItem {
  static entity = "PriceHistoryItem";
  static schema = {
    id: { type: "String", index: true },
    asset: "string",
    price: "string",
    timestamp: "number",
    entityId: { type: "String", index: true },
    blocknumber: { type: "Number", index: true },
    chainId: { type: "String", index: true },
  };
}

export class UsdEthPriceHistoryItem {
  static entity = "UsdEthPriceHistoryItem";
  static schema = {
    id: { type: "String", index: true },
    oracle: "string",
    price: "string",
    timestamp: "number",
    entityId: { type: "String", index: true },
    blocknumber: { type: "Number", index: true },
    chainId: { type: "String", index: true },
  };
}

export class PriceOracle {
  static entity = "PriceOracle";
  static schema = {
    id: { type: "String", index: true },
    proxyPriceProvider: "string",
    usdPriceEth: "string",
    usdPriceEthMainSource: "string",
    usdPriceEthFallbackRequired: "Boolean",
    usdDependentAssets: ["string"],
    fallbackPriceOracle: "string",
    tokens: ["string"],
    usdPriceEthHistory: ["string"],
    tokensWithFallback: ["string"],
    lastUpdateTimestamp: "number",
    version: "number",
    baseCurrency: "string",
    baseCurrencyUnit: "string",
    entityId: { type: "String", index: true },
    blocknumber: { type: "Number", index: true },
    chainId: { type: "String", index: true },
  };
}

export class SToken {
  static entity = "SToken";
  static schema = {
    id: { type: "String", index: true },
    pool: "string",
    underlyingAssetAddress: "string",
    underlyingAssetDecimals: "number",
    tokenContractImpl: "string",
    entityId: { type: "String", index: true },
    blocknumber: { type: "Number", index: true },
    chainId: { type: "String", index: true },
  };
}

export class VToken {
  static entity = "VToken";
  static schema = {
    id: { type: "String", index: true },
    pool: "string",
    underlyingAssetAddress: "string",
    underlyingAssetDecimals: "number",
    tokenContractImpl: "string",
    entityId: { type: "String", index: true },
    blocknumber: { type: "Number", index: true },
    chainId: { type: "String", index: true },
  };
}

export class AToken {
  static entity = "AToken";
  static schema = {
    id: { type: "String", index: true },
    pool: "string",
    underlyingAssetAddress: "string",
    underlyingAssetDecimals: "number",
    tokenContractImpl: "string",
    entityId: { type: "String", index: true },
    blocknumber: { type: "Number", index: true },
    chainId: { type: "String", index: true },
  };
}

export class VariableDebtToken {
  static entity = "VariableDebtToken";
  static schema = {
    id: { type: "String", index: true },
    pool: "string",
    underlyingAssetAddress: "string",
    underlyingAssetDecimals: "number",
    entityId: { type: "String", index: true },
    blocknumber: { type: "Number", index: true },
    chainId: { type: "String", index: true },
  };
}

export class StableDebtToken {
  static entity = "StableDebtToken";
  static schema = {
    id: { type: "String", index: true },
    pool: "string",
    underlyingAssetAddress: "string",
    underlyingAssetDecimals: "number",
    entityId: { type: "String", index: true },
    blocknumber: { type: "Number", index: true },
    chainId: { type: "String", index: true },
  };
}

export class Referrer {
  static entity = "Referrer";
  static schema = {
    id: { type: "String", index: true },
    deposits: ["string"],
    borrows: ["string"],
    entityId: { type: "String", index: true },
    blocknumber: { type: "Number", index: true },
    chainId: { type: "String", index: true },
  };
}

export class Deposit {
  static entity = "Deposit";
  static schema = {
    id: { type: "String", index: true },
    txHash: "string",
    action: "string",
    pool: "string",
    user: "string",
    caller: "string",
    reserve: "string",
    userReserve: "string",
    amount: "string",
    referrer: "string",
    timestamp: "number",
    assetPriceUSD: "string",
    entityId: { type: "String", index: true },
    blocknumber: { type: "Number", index: true },
    chainId: { type: "String", index: true },
  };
}

export class RedeemUnderlying {
  static entity = "RedeemUnderlying";
  static schema = {
    id: { type: "String", index: true },
    txHash: "string",
    action: "string",
    pool: "string",
    user: "string",
    to: "string",
    reserve: "string",
    userReserve: "string",
    amount: "string",
    timestamp: "number",
    assetPriceUSD: "string",
    entityId: { type: "String", index: true },
    blocknumber: { type: "Number", index: true },
    chainId: { type: "String", index: true },
  };
}

export class Borrow {
  static entity = "Borrow";
  static schema = {
    id: { type: "String", index: true },
    txHash: "string",
    action: "string",
    pool: "string",
    user: "string",
    caller: "string",
    reserve: "string",
    userReserve: "string",
    amount: "string",
    borrowRate: "string",
    borrowRateMode: "string",
    referrer: "string",
    timestamp: "number",
    stableTokenDebt: "string",
    variableTokenDebt: "string",
    assetPriceUSD: "string",
    entityId: { type: "String", index: true },
    blocknumber: { type: "Number", index: true },
    chainId: { type: "String", index: true },
  };
}

export class Swap {
  static entity = "Swap";
  static schema = {
    id: { type: "String", index: true },
    txHash: "string",
    action: "string",
    pool: "string",
    user: "string",
    reserve: "string",
    userReserve: "string",
    borrowRateModeFrom: "string",
    borrowRateModeTo: "string",
    stableBorrowRate: "string",
    variableBorrowRate: "string",
    timestamp: "number",
    entityId: { type: "String", index: true },
    blocknumber: { type: "Number", index: true },
    chainId: { type: "String", index: true },
  };
}

export class UsageAsCollateral {
  static entity = "UsageAsCollateral";
  static schema = {
    id: { type: "String", index: true },
    txHash: "string",
    action: "string",
    pool: "string",
    user: "string",
    reserve: "string",
    userReserve: "string",
    fromState: "Boolean",
    toState: "Boolean",
    timestamp: "number",
    entityId: { type: "String", index: true },
    blocknumber: { type: "Number", index: true },
    chainId: { type: "String", index: true },
  };
}

export class RebalanceStableBorrowRate {
  static entity = "RebalanceStableBorrowRate";
  static schema = {
    id: { type: "String", index: true },
    txHash: "string",
    action: "string",
    pool: "string",
    user: "string",
    reserve: "string",
    userReserve: "string",
    borrowRateFrom: "string",
    borrowRateTo: "string",
    timestamp: "number",
    entityId: { type: "String", index: true },
    blocknumber: { type: "Number", index: true },
    chainId: { type: "String", index: true },
  };
}

export class Repay {
  static entity = "Repay";
  static schema = {
    id: { type: "String", index: true },
    txHash: "string",
    action: "string",
    pool: "string",
    user: "string",
    repayer: "string",
    reserve: "string",
    userReserve: "string",
    amount: "string",
    timestamp: "number",
    assetPriceUSD: "string",
    entityId: { type: "String", index: true },
    blocknumber: { type: "Number", index: true },
    chainId: { type: "String", index: true },
  };
}

export class FlashLoan {
  static entity = "FlashLoan";
  static schema = {
    id: { type: "String", index: true },
    pool: "string",
    reserve: "string",
    target: "string",
    amount: "string",
    totalFee: "string",
    initiator: "string",
    timestamp: "number",
    assetPriceUSD: "string",
    entityId: { type: "String", index: true },
    blocknumber: { type: "Number", index: true },
    chainId: { type: "String", index: true },
  };
}

export class LiquidationCall {
  static entity = "LiquidationCall";
  static schema = {
    id: { type: "String", index: true },
    txHash: "string",
    action: "string",
    pool: "string",
    user: "string",
    collateralReserve: "string",
    collateralUserReserve: "string",
    collateralAmount: "string",
    principalReserve: "string",
    principalUserReserve: "string",
    principalAmount: "string",
    liquidator: "string",
    timestamp: "number",
    collateralAssetPriceUSD: "string",
    borrowAssetPriceUSD: "string",
    entityId: { type: "String", index: true },
    blocknumber: { type: "Number", index: true },
    chainId: { type: "String", index: true },
  };
}

export class ReserveConfigurationHistoryItem {
  static entity = "ReserveConfigurationHistoryItem";
  static schema = {
    id: { type: "String", index: true },
    reserve: "string",
    usageAsCollateralEnabled: "Boolean",
    borrowingEnabled: "Boolean",
    stableBorrowRateEnabled: "Boolean",
    isActive: "Boolean",
    isFrozen: "Boolean",
    reserveInterestRateStrategy: "string",
    baseLTVasCollateral: "string",
    reserveLiquidationThreshold: "string",
    reserveLiquidationBonus: "string",
    timestamp: "number",
    entityId: { type: "String", index: true },
    blocknumber: { type: "Number", index: true },
    chainId: { type: "String", index: true },
  };
}

export class ReserveParamsHistoryItem {
  static entity = "ReserveParamsHistoryItem";
  static schema = {
    id: { type: "String", index: true },
    reserve: "string",
    variableBorrowRate: "string",
    variableBorrowIndex: "string",
    utilizationRate: "string",
    stableBorrowRate: "string",
    averageStableBorrowRate: "string",
    liquidityIndex: "string",
    liquidityRate: "string",
    totalLiquidity: "string",
    totalATokenSupply: "string",
    totalLiquidityAsCollateral: "string",
    availableLiquidity: "string",
    priceInEth: "string",
    priceInUsd: "string",
    timestamp: "number",
    totalScaledVariableDebt: "string",
    totalCurrentVariableDebt: "string",
    totalPrincipalStableDebt: "string",
    lifetimePrincipalStableDebt: "string",
    lifetimeScaledVariableDebt: "string",
    lifetimeCurrentVariableDebt: "string",
    lifetimeLiquidity: "string",
    lifetimeRepayments: "string",
    lifetimeWithdrawals: "string",
    lifetimeBorrows: "string",
    lifetimeLiquidated: "string",
    lifetimeFlashLoans: "string",
    lifetimeFlashLoanPremium: "string",
    lifetimeReserveFactorAccrued: "string",
    lifetimeDepositorsInterestEarned: "string",
    entityId: { type: "String", index: true },
    blocknumber: { type: "Number", index: true },
    chainId: { type: "String", index: true },
  };
}

export class IncentivesController {
  static entity = "IncentivesController";
  static schema = {
    id: { type: "String", index: true },
    rewardToken: "string",
    rewardTokenDecimals: "number",
    rewardTokenSymbol: "string",
    precision: "number",
    emissionEndTimestamp: "number",
    incentivizedActions: ["string"],
    claimIncentives: ["string"],
    entityId: { type: "String", index: true },
    blocknumber: { type: "Number", index: true },
    chainId: { type: "String", index: true },
  };
}

export class IncentivizedAction {
  static entity = "IncentivizedAction";
  static schema = {
    id: { type: "String", index: true },
    incentivesController: "string",
    user: "string",
    amount: "string",
    entityId: { type: "String", index: true },
    blocknumber: { type: "Number", index: true },
    chainId: { type: "String", index: true },
  };
}

export class ClaimIncentiveCall {
  static entity = "ClaimIncentiveCall";
  static schema = {
    id: { type: "String", index: true },
    incentivesController: "string",
    user: "string",
    amount: "string",
    entityId: { type: "String", index: true },
    blocknumber: { type: "Number", index: true },
    chainId: { type: "String", index: true },
  };
}

export class MapAssetPool {
  static entity = "MapAssetPool";
  static schema = {
    id: { type: "String", index: true },
    pool: "string",
    underlyingAsset: "string",
    entityId: { type: "String", index: true },
    blocknumber: { type: "Number", index: true },
    chainId: { type: "String", index: true },
  };
}

export class Reserve {
  static entity = "Reserve";
  static schema = {
    id: { type: "String", index: true },
    underlyingAsset: "string",
    pool: "string",
    symbol: "string",
    name: "string",
    decimals: "number",
    usageAsCollateralEnabled: "Boolean",
    borrowingEnabled: "Boolean",
    stableBorrowRateEnabled: "Boolean",
    isActive: "Boolean",
    isFrozen: "Boolean",
    price: "string",
    reserveInterestRateStrategy: "string",
    optimalUtilisationRate: "string",
    variableRateSlope1: "string",
    variableRateSlope2: "string",
    stableRateSlope1: "string",
    stableRateSlope2: "string",
    baseVariableBorrowRate: "string",
    baseLTVasCollateral: "string",
    reserveLiquidationThreshold: "string",
    reserveLiquidationBonus: "string",
    utilizationRate: "string",
    totalLiquidity: "string",
    totalATokenSupply: "string",
    totalLiquidityAsCollateral: "string",
    availableLiquidity: "string",
    totalPrincipalStableDebt: "string",
    totalScaledVariableDebt: "string",
    totalCurrentVariableDebt: "string",
    totalDeposits: "string",
    liquidityRate: "string",
    averageStableRate: "string",
    variableBorrowRate: "string",
    stableBorrowRate: "string",
    liquidityIndex: "string",
    variableBorrowIndex: "string",
    aToken: "string",
    vToken: "string",
    sToken: "string",
    reserveFactor: "string",
    lastUpdateTimestamp: "number",
    stableDebtLastUpdateTimestamp: "number",
    aEmissionPerSecond: "string",
    vEmissionPerSecond: "string",
    sEmissionPerSecond: "string",
    aTokenIncentivesIndex: "string",
    vTokenIncentivesIndex: "string",
    sTokenIncentivesIndex: "string",
    aIncentivesLastUpdateTimestamp: "number",
    vIncentivesLastUpdateTimestamp: "number",
    sIncentivesLastUpdateTimestamp: "number",
    lifetimeLiquidity: "string",
    lifetimePrincipalStableDebt: "string",
    lifetimeScaledVariableDebt: "string",
    lifetimeCurrentVariableDebt: "string",
    lifetimeRepayments: "string",
    lifetimeWithdrawals: "string",
    lifetimeBorrows: "string",
    lifetimeLiquidated: "string",
    lifetimeFlashLoans: "string",
    lifetimeFlashLoanPremium: "string",
    lifetimeDepositorsInterestEarned: "string",
    lifetimeReserveFactorAccrued: "string",
    userReserves: ["string"],
    depositHistory: ["string"],
    redeemUnderlyingHistory: ["string"],
    borrowHistory: ["string"],
    usageAsCollateralHistory: ["string"],
    swapHistory: ["string"],
    rebalanceStableBorrowRateHistory: ["string"],
    repayHistory: ["string"],
    flashLoanHistory: ["string"],
    liquidationCallHistory: ["string"],
    paramsHistory: ["string"],
    configurationHistory: ["string"],
    deposits: ["string"],
    entityId: { type: "String", index: true },
    blocknumber: { type: "Number", index: true },
    chainId: { type: "String", index: true },
  };
}

export class WETHReserve {
  static entity = "WETHReserve";
  static schema = {
    id: { type: "String", index: true },
    address: "string",
    symbol: "string",
    name: "string",
    decimals: "number",
    updatedTimestamp: "number",
    updatedBlockNumber: "string",
    entityId: { type: "String", index: true },
    blocknumber: { type: "Number", index: true },
    chainId: { type: "String", index: true },
  };
}

export class ATokenBalanceHistoryItem {
  static entity = "ATokenBalanceHistoryItem";
  static schema = {
    id: { type: "String", index: true },
    userReserve: "string",
    timestamp: "number",
    scaledATokenBalance: "string",
    currentATokenBalance: "string",
    index: "string",
    entityId: { type: "String", index: true },
    blocknumber: { type: "Number", index: true },
    chainId: { type: "String", index: true },
  };
}

export class VTokenBalanceHistoryItem {
  static entity = "VTokenBalanceHistoryItem";
  static schema = {
    id: { type: "String", index: true },
    userReserve: "string",
    scaledVariableDebt: "string",
    currentVariableDebt: "string",
    timestamp: "number",
    index: "string",
    entityId: { type: "String", index: true },
    blocknumber: { type: "Number", index: true },
    chainId: { type: "String", index: true },
  };
}

export class STokenBalanceHistoryItem {
  static entity = "STokenBalanceHistoryItem";
  static schema = {
    id: { type: "String", index: true },
    userReserve: "string",
    principalStableDebt: "string",
    currentStableDebt: "string",
    timestamp: "number",
    avgStableBorrowRate: "string",
    entityId: { type: "String", index: true },
    blocknumber: { type: "Number", index: true },
    chainId: { type: "String", index: true },
  };
}

export class StableTokenDelegatedAllowance {
  static entity = "StableTokenDelegatedAllowance";
  static schema = {
    id: { type: "String", index: true },
    fromUser: "string",
    toUser: "string",
    amountAllowed: "string",
    userReserve: "string",
    entityId: { type: "String", index: true },
    blocknumber: { type: "Number", index: true },
    chainId: { type: "String", index: true },
  };
}

export class VariableTokenDelegatedAllowance {
  static entity = "VariableTokenDelegatedAllowance";
  static schema = {
    id: { type: "String", index: true },
    fromUser: "string",
    toUser: "string",
    amountAllowed: "string",
    userReserve: "string",
    entityId: { type: "String", index: true },
    blocknumber: { type: "Number", index: true },
    chainId: { type: "String", index: true },
  };
}

export class UserReserve {
  static entity = "UserReserve";
  static schema = {
    id: { type: "String", index: true },
    pool: "string",
    reserve: "string",
    user: "string",
    usageAsCollateralEnabledOnUser: "Boolean",
    scaledATokenBalance: "string",
    currentATokenBalance: "string",
    scaledVariableDebt: "string",
    currentVariableDebt: "string",
    principalStableDebt: "string",
    currentStableDebt: "string",
    currentTotalDebt: "string",
    stableBorrowRate: "string",
    oldStableBorrowRate: "string",
    liquidityRate: "string",
    stableBorrowLastUpdateTimestamp: "number",
    variableBorrowIndex: "string",
    aTokenincentivesUserIndex: "string",
    vTokenincentivesUserIndex: "string",
    sTokenincentivesUserIndex: "string",
    aIncentivesLastUpdateTimestamp: "number",
    vIncentivesLastUpdateTimestamp: "number",
    sIncentivesLastUpdateTimestamp: "number",
    lastUpdateTimestamp: "number",
    stableTokenDelegatedAllowances: ["string"],
    variableTokenDelegatedAllowances: ["string"],
    aTokenBalanceHistory: ["string"],
    vTokenBalanceHistory: ["string"],
    sTokenBalanceHistory: ["string"],
    usageAsCollateralHistory: ["string"],
    depositHistory: ["string"],
    redeemUnderlyingHistory: ["string"],
    borrowHistory: ["string"],
    swapHistory: ["string"],
    rebalanceStableBorrowRateHistory: ["string"],
    repayHistory: ["string"],
    liquidationCallHistory: ["string"],
    entityId: { type: "String", index: true },
    blocknumber: { type: "Number", index: true },
    chainId: { type: "String", index: true },
  };
}

export class User {
  static entity = "User";
  static schema = {
    id: { type: "String", index: true },
    borrowedReservesCount: "number",
    unclaimedRewards: "string",
    lifetimeRewards: "string",
    incentivesLastUpdated: "number",
    reserves: ["string"],
    depositHistory: ["string"],
    redeemUnderlyingHistory: ["string"],
    usageAsCollateralHistory: ["string"],
    borrowHistory: ["string"],
    swapHistory: ["string"],
    rebalanceStableBorrowRateHistory: ["string"],
    repayHistory: ["string"],
    liquidationCallHistory: ["string"],
    incentivizedActions: ["string"],
    claimIncentives: ["string"],
    entityId: { type: "String", index: true },
    blocknumber: { type: "Number", index: true },
    chainId: { type: "String", index: true },
  };
}

export class SwapHistory {
  static entity = "SwapHistory";
  static schema = {
    id: { type: "String", index: true },
    fromAsset: "string",
    toAsset: "string",
    fromAmount: "string",
    receivedAmount: "string",
    swapType: "string",
    entityId: { type: "String", index: true },
    blocknumber: { type: "Number", index: true },
    chainId: { type: "String", index: true },
  };
}

import { String, Array } from "@blockflow-labs/utils";

export interface IProtocol extends Document {
  id: String;
  pools: [string];
  blocknumber: String;
  entityId: String;
  chainId: String;
}

export interface IContractToPoolMapping extends Document {
  id: string;
  pool: string;
  blocknumber: String;
  entityId: String;
  chainId: String;
}

export interface IPoolConfigurationHistoryItem extends Document {
  id: string;
  active: Boolean;
  pool: string;
  lendingPool: string;
  lendingPoolCollateralManager: string;
  lendingPoolConfiguratorImpl: string;
  lendingPoolImpl: string;
  lendingPoolConfigurator: string;
  proxyPriceProvider: string;
  lendingRateOracle: string;
  configurationAdmin: string;
  timestamp: string;
  blocknumber: String;
  entityId: String;
  chainId: String;
}

export interface IPool extends Document {
  id: string;
  protocol: string;
  lendingPool: string;
  lendingPoolCollateralManager: string;
  lendingPoolConfiguratorImpl: string;
  lendingPoolImpl: string;
  lendingPoolConfigurator: string;
  proxyPriceProvider: string;
  lendingRateOracle: string;
  configurationAdmin: string;
  ethereumAddress: string;
  emergencyAdmin: string;
  history: [string];
  lastUpdateTimestamp: number;

  reserves: [string];
  depositHistory: [string];
  redeemUnderlyingHistory: [string];
  borrowHistory: [string];
  swapHistory: [string];
  usageAsCollateralHistory: [string];
  rebalanceStableBorrowRateHistory: [string];
  repayHistory: [string];
  flashLoanHistory: [string];
  liquidationCallHistory: [string];

  active: Boolean;
  paused: Boolean;
  blocknumber: String;
  entityId: String;
  chainId: String;
}

export interface IPriceHistoryItem extends Document {
  id: string;
  asset: string;
  price: string;
  timestamp: number;
  blocknumber: String;
  entityId: String;
  chainId: String;
}

export interface IUsdEthPriceHistoryItem extends Document {
  id: string;
  oracle: string;
  price: string;
  timestamp: number;
  blocknumber: String;
  entityId: String;
  chainId: String;
}

export interface IPriceOracle extends Document {
  id: string;
  proxyPriceProvider: string;
  usdPriceEth: string;
  usdPriceEthMainSource: string;
  usdPriceEthFallbackRequired: Boolean;
  usdDependentAssets: [string];
  fallbackPriceOracle: string;
  tokens: [string];
  usdPriceEthHistory: [string];
  tokensWithFallback: [string];
  lastUpdateTimestamp: number;
  version: number;
  baseCurrency: string;
  baseCurrencyUnit: string;
  blocknumber: String;
  entityId: String;
  chainId: String;
}

export interface ISToken extends Document {
  id: string;
  pool: string;
  underlyingAssetAddress: string;
  underlyingAssetDecimals: number;
  tokenContractImpl: string;
  blocknumber: String;
  entityId: String;
  chainId: String;
}

export interface IVToken extends Document {
  id: string;
  pool: string;
  underlyingAssetAddress: string;
  underlyingAssetDecimals: number;
  tokenContractImpl: string;
  blocknumber: String;
  entityId: String;
  chainId: String;
}

export interface IAToken extends Document {
  id: string;
  pool: string;
  underlyingAssetAddress: string;
  underlyingAssetDecimals: number;
  tokenContractImpl: string;
  blocknumber: String;
  entityId: String;
  chainId: String;
}

export interface IVariableDebtToken extends Document {
  id: string;
  pool: string;
  underlyingAssetAddress: string;
  underlyingAssetDecimals: number;
  blocknumber: String;
  entityId: String;
  chainId: String;
}

export interface IStableDebtToken extends Document {
  id: string;
  pool: string;
  underlyingAssetAddress: string;
  underlyingAssetDecimals: number;
  blocknumber: String;
  entityId: String;
  chainId: String;
}

export interface IReferrer extends Document {
  id: string;
  deposits: [string];
  borrows: [string];
  blocknumber: String;
  entityId: String;
  chainId: String;
}

export interface IDeposit extends Document {
  id: string;
  txHash: string;
  action: string;
  pool: string;
  user: string;
  caller: string;
  reserve: string;
  userReserve: string;
  amount: string;
  referrer: string;
  timestamp: number;
  assetPriceUSD: string;
  blocknumber: String;
  entityId: String;
  chainId: String;
}

export interface IRedeemUnderlying extends Document {
  id: string;
  txHash: string;
  action: string;
  pool: string;
  user: string;
  to: string;
  reserve: string;
  userReserve: string;
  amount: string;
  timestamp: number;
  assetPriceUSD: string;
  blocknumber: String;
  entityId: String;
  chainId: String;
}

export interface IBorrow extends Document {
  id: string;
  txHash: string;
  action: string;
  pool: string;
  user: string;
  caller: string;
  reserve: string;
  userReserve: string;
  amount: string;
  borrowRate: string;
  borrowRateMode: string;
  referrer: string;
  timestamp: number;
  stableTokenDebt: string;
  variableTokenDebt: string;
  assetPriceUSD: string;
  blocknumber: String;
  entityId: String;
  chainId: String;
}

export interface ISwap extends Document {
  id: string;
  txHash: string;
  action: string;
  pool: string;
  user: string;
  reserve: string;
  userReserve: string;
  borrowRateModeFrom: string;
  borrowRateModeTo: string;
  stableBorrowRate: string;
  variableBorrowRate: string;
  timestamp: number;
  blocknumber: String;
  entityId: String;
  chainId: String;
}

export interface IUsageAsCollateral extends Document {
  id: string;
  txHash: string;
  action: string;
  pool: string;
  user: string;
  reserve: string;
  userReserve: string;
  fromState: Boolean;
  toState: Boolean;
  timestamp: number;
  blocknumber: String;
  entityId: String;
  chainId: String;
}

export interface IRebalanceStableBorrowRate extends Document {
  id: string;
  txHash: string;
  action: string;
  pool: string;
  user: string;
  reserve: string;
  userReserve: string;
  borrowRateFrom: string;
  borrowRateTo: string;
  timestamp: number;
  blocknumber: String;
  entityId: String;
  chainId: String;
}

export interface IRepay extends Document {
  id: string;
  txHash: string;
  action: string;
  pool: string;
  user: string;
  repayer: string;
  reserve: string;
  userReserve: string;
  amount: string;
  timestamp: number;
  assetPriceUSD: string;
  blocknumber: String;
  entityId: String;
  chainId: String;
}

export interface IFlashLoan extends Document {
  id: string;
  pool: string;
  reserve: string;
  target: string;
  amount: string;
  totalFee: string;
  initiator: string;
  timestamp: number;
  assetPriceUSD: string;
  blocknumber: String;
  entityId: String;
  chainId: String;
}

export interface ILiquidationCall extends Document {
  id: string;
  txHash: string;
  action: string;
  pool: string;
  user: string;
  collateralReserve: string;
  collateralUserReserve: string;
  collateralAmount: string;
  principalReserve: string;
  principalUserReserve: string;
  principalAmount: string;
  liquidator: string;
  timestamp: number;
  collateralAssetPriceUSD: string;
  borrowAssetPriceUSD: string;
  blocknumber: String;
  entityId: String;
  chainId: String;
}

export interface IReserveConfigurationHistoryItem extends Document {
  id: string;
  reserve: string;
  usageAsCollateralEnabled: Boolean;
  borrowingEnabled: Boolean;
  stableBorrowRateEnabled: Boolean;
  isActive: Boolean;
  isFrozen: Boolean;
  reserveInterestRateStrategy: string;
  baseLTVasCollateral: string;
  reserveLiquidationThreshold: string;
  reserveLiquidationBonus: string;
  timestamp: number;
  blocknumber: String;
  entityId: String;
  chainId: String;
}

export interface IReserveParamsHistoryItem extends Document {
  id: string;
  reserve: string;
  variableBorrowRate: string;
  variableBorrowIndex: string;
  utilizationRate: string;
  stableBorrowRate: string;
  averageStableBorrowRate: string;
  liquidityIndex: string;
  liquidityRate: string;
  totalLiquidity: string;
  totalATokenSupply: string;
  totalLiquidityAsCollateral: string;
  availableLiquidity: string;
  priceInEth: string;
  priceInUsd: string;
  timestamp: number;
  totalScaledVariableDebt: string;
  totalCurrentVariableDebt: string;
  totalPrincipalStableDebt: string;
  lifetimePrincipalStableDebt: string;
  lifetimeScaledVariableDebt: string;
  lifetimeCurrentVariableDebt: string;
  lifetimeLiquidity: string;
  lifetimeRepayments: string;
  lifetimeWithdrawals: string;
  lifetimeBorrows: string;
  lifetimeLiquidated: string;
  lifetimeFlashLoans: string;
  lifetimeFlashLoanPremium: string;
  lifetimeReserveFactorAccrued: string;
  lifetimeDepositorsInterestEarned: string;
  blocknumber: String;
  entityId: String;
  chainId: String;
}

export interface IncentivesController extends Document {
  id: string;
  rewardToken: string;
  rewardTokenDecimals: number;
  rewardTokenSymbol: string;
  precision: number;
  emissionEndTimestamp: number;

  incentivizedActions: [string];
  claimIncentives: [string];
  blocknumber: String;
  entityId: String;
  chainId: String;
}

export interface IncentivizedAction extends Document {
  id: string;
  incentivesController: string;
  user: string;
  amount: string;
  blocknumber: String;
  entityId: String;
  chainId: String;
}

export interface IClaimIncentiveCall extends Document {
  id: string;
  incentivesController: string;
  user: string;
  amount: string;
  blocknumber: String;
  entityId: String;
  chainId: String;
}

export interface IMapAssetPool extends Document {
  id: string;
  pool: string;
  underlyingAsset: string;
  blocknumber: String;
  entityId: String;
  chainId: String;
}

export interface IReserve extends Document {
  id: string;
  underlyingAsset: string;
  pool: string;
  symbol: string;
  name: string;
  decimals: number;
  usageAsCollateralEnabled: Boolean;
  borrowingEnabled: Boolean;
  stableBorrowRateEnabled: Boolean;
  isActive: Boolean;
  isFrozen: Boolean;
  price: string;
  reserveInterestRateStrategy: string;
  optimalUtilisationRate: string;
  variableRateSlope1: string;
  variableRateSlope2: string;
  stableRateSlope1: string;
  stableRateSlope2: string;
  baseVariableBorrowRate: string;
  baseLTVasCollateral: string;
  reserveLiquidationThreshold: string;
  reserveLiquidationBonus: string;
  utilizationRate: string;
  totalLiquidity: string;
  totalATokenSupply: string;
  totalLiquidityAsCollateral: string;
  availableLiquidity: string;
  totalPrincipalStableDebt: string;
  totalScaledVariableDebt: string;
  totalCurrentVariableDebt: string;
  totalDeposits: string;
  liquidityRate: string;
  averageStableRate: string;
  variableBorrowRate: string;
  stableBorrowRate: string;
  liquidityIndex: string;
  variableBorrowIndex: string;
  aToken: string;
  vToken: string;
  sToken: string;
  reserveFactor: string;
  lastUpdateTimestamp: number;
  stableDebtLastUpdateTimestamp: number;

  aEmissionPerSecond: string;
  vEmissionPerSecond: string;
  sEmissionPerSecond: string;
  aTokenIncentivesIndex: string;
  vTokenIncentivesIndex: string;
  sTokenIncentivesIndex: string;
  aIncentivesLastUpdateTimestamp: number;
  vIncentivesLastUpdateTimestamp: number;
  sIncentivesLastUpdateTimestamp: number;

  lifetimeLiquidity: string;
  lifetimePrincipalStableDebt: string;
  lifetimeScaledVariableDebt: string;
  lifetimeCurrentVariableDebt: string;
  lifetimeRepayments: string;
  lifetimeWithdrawals: string;
  lifetimeBorrows: string;
  lifetimeLiquidated: string;
  lifetimeFlashLoans: string;
  lifetimeFlashLoanPremium: string;
  lifetimeDepositorsInterestEarned: string;
  lifetimeReserveFactorAccrued: string;
  userReserves: [string];
  depositHistory: [string];
  redeemUnderlyingHistory: [string];
  borrowHistory: [string];
  usageAsCollateralHistory: [string];
  swapHistory: [string];
  rebalanceStableBorrowRateHistory: [string];
  repayHistory: [string];
  flashLoanHistory: [string];
  liquidationCallHistory: [string];
  paramsHistory: [string];
  configurationHistory: [string];
  deposits: [string];
  blocknumber: String;
  entityId: String;
  chainId: String;
}

export interface IWETHReserve extends Document {
  id: string;
  address: string;
  symbol: string;
  name: string;
  decimals: number;
  updatedTimestamp: number;
  updatedBlockNumber: string;
  blocknumber: String;
  entityId: String;
  chainId: String;
}

export interface IATokenBalanceHistoryItem extends Document {
  id: string;
  userReserve: string;
  timestamp: number;
  scaledATokenBalance: string;
  currentATokenBalance: string;
  index: string;
  blocknumber: String;
  entityId: String;
  chainId: String;
}

export interface IVTokenBalanceHistoryItem extends Document {
  id: string;
  userReserve: string;
  scaledVariableDebt: string;
  currentVariableDebt: string;
  timestamp: number;
  index: string;
  blocknumber: String;
  entityId: String;
  chainId: String;
}

export interface ISTokenBalanceHistoryItem extends Document {
  id: string;
  userReserve: string;
  principalStableDebt: string;
  currentStableDebt: string;
  timestamp: number;
  avgStableBorrowRate: string;
  blocknumber: String;
  entityId: String;
  chainId: String;
}

export interface IStableTokenDelegatedAllowance extends Document {
  id: string;
  fromUser: string;
  toUser: string;
  amountAllowed: string;
  userReserve: string;
  blocknumber: String;
  entityId: String;
  chainId: String;
}

export interface IVariableTokenDelegatedAllowance extends Document {
  id: string;
  fromUser: string;
  toUser: string;
  amountAllowed: string;
  userReserve: string;
  blocknumber: String;
  entityId: String;
  chainId: String;
}

export interface IUserReserve extends Document {
  id: string;
  pool: string;
  reserve: string;
  user: string;
  usageAsCollateralEnabledOnUser: Boolean;
  scaledATokenBalance: string;
  currentATokenBalance: string;
  scaledVariableDebt: string;
  currentVariableDebt: string;
  principalStableDebt: string;
  currentStableDebt: string;
  currentTotalDebt: string;
  stableBorrowRate: string;
  oldStableBorrowRate: string;
  liquidityRate: string;
  stableBorrowLastUpdateTimestamp: number;
  variableBorrowIndex: string;

  aTokenincentivesUserIndex: string;
  vTokenincentivesUserIndex: string;
  sTokenincentivesUserIndex: string;
  aIncentivesLastUpdateTimestamp: number;
  vIncentivesLastUpdateTimestamp: number;
  sIncentivesLastUpdateTimestamp: number;
  lastUpdateTimestamp: number;
  stableTokenDelegatedAllowances: [string];
  variableTokenDelegatedAllowances: [string];
  aTokenBalanceHistory: [string];
  vTokenBalanceHistory: [string];
  sTokenBalanceHistory: [string];

  usageAsCollateralHistory: [string];
  depositHistory: [string];
  redeemUnderlyingHistory: [string];
  borrowHistory: [string];
  swapHistory: [string];
  rebalanceStableBorrowRateHistory: [string];
  repayHistory: [string];
  liquidationCallHistory: [string];
  blocknumber: String;
  entityId: String;
  chainId: String;
}

export interface IUser extends Document {
  id: string;
  borrowedReservesCount: number;

  unclaimedRewards: string;
  lifetimeRewards: string;
  incentivesLastUpdated: number;

  reserves: [string];
  depositHistory: [string];
  redeemUnderlyingHistory: [string];
  usageAsCollateralHistory: [string];
  borrowHistory: [string];
  swapHistory: [string];
  rebalanceStableBorrowRateHistory: [string];
  repayHistory: [string];
  liquidationCallHistory: [string];
  incentivizedActions: [string];
  claimIncentives: [string];
  blocknumber: String;
  entityId: String;
  chainId: String;
}

export interface ISwapHistory extends Document {
  id: string;
  fromAsset: string;
  toAsset: string;
  fromAmount: string;
  receivedAmount: string;
  swapType: string;
  blocknumber: String;
  entityId: String;
  chainId: String;
}
