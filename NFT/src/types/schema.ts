// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import { Document } from "@blockflow-labs/utils";

export class Token {
  static entity = "Token";
  static schema = {
    id: { type: "String", index: true },
    collectionNFT: "string",
    tokenId: "string",
    tokenURI: "string",
    owner: "string",
    mintTime: "number",
    entityId: { type: "String", index: true },
    blocknumber: { type: "Number", index: true },
    chainId: { type: "String", index: true },
  };
}

export class CollectionERC721 {
  static entity = "CollectionERC721";
  static schema = {
    id: { type: "String", index: true },
    name: "string",
    symbol: "string",
    supportsERC721Metadata: "boolean",
    tokenCount: "number",
    ownerCount: "number",
    transferCount: "number",
    entityId: { type: "String", index: true },
    blocknumber: { type: "Number", index: true },
    chainId: { type: "String", index: true },
  };
}

export class CollectionDailySnapshot {
  static entity = "CollectionDailySnapshot";
  static schema = {
    id: { type: "String", index: true },
    tokenCount: "number",
    ownerCount: "number",
    dailyTransferCount: "number",
    blockNumber: "number",
    timestamp: "number",
    entityId: { type: "String", index: true },
    blocknumber: { type: "Number", index: true },
    chainId: { type: "String", index: true },
  };
}

export class Transfer {
  static entity = "Transfer";
  static schema = {
    id: { type: "String", index: true },
    fromAddress: "string",
    toAddress: "string",
    tokenAddress: "string",
    tokenId: "string",
    transferType: "string",
    transactionFromAddress: "string",
    transactionToAddress: "string",
    transactionHash: "string",
    logIndex: "string",
    blockTimestamp: "string",
    blockHash: "string",
    entityId: { type: "String", index: true },
    blocknumber: { type: "Number", index: true },
    chainId: { type: "String", index: true },
  };
}

export class Account {
  static entity = "Account";
  static schema = {
    id: { type: "String", index: true },
    tokenCount: "number",
    entityId: { type: "String", index: true },
    blocknumber: { type: "Number", index: true },
    chainId: { type: "String", index: true },
  };
}

export class AccountBalance {
  static entity = "AccountBalance";
  static schema = {
    id: { type: "String", index: true },
    account: "string",
    CollectionERC721: "string",
    tokenCount: "number",
    blockNumber: "number",
    timestamp: "number",
    entityId: { type: "String", index: true },
    blocknumber: { type: "Number", index: true },
    chainId: { type: "String", index: true },
  };
}

export class AccountDailySnapshot {
  static entity = "AccountDailySnapshot";
  static schema = {
    id: { type: "String", index: true },
    account: "string",
    CollectionERC721: "string",
    tokenCount: "number",
    blockNumber: "number",
    timestamp: "number",
    entityId: { type: "String", index: true },
    blocknumber: { type: "Number", index: true },
    chainId: { type: "String", index: true },
  };
}

export class NonERC721Collection {
  static entity = "NonERC721Collection";
  static schema = {
    id: { type: "String", index: true },
    entityId: { type: "String", index: true },
    blocknumber: { type: "Number", index: true },
    chainId: { type: "String", index: true },
  };
}

import { String, Array } from "@blockflow-labs/utils";

export interface IToken extends Document {
  id: String;
  collectionNFT: string;
  tokenId: string;
  tokenURI: string;
  owner: string;
  mintTime: number;
  blocknumber: String;
  entityId: String;
  chainId: String;
}

export interface ICollectionERC721 extends Document {
  id: String;
  name: string;
  symbol: string;
  supportsERC721Metadata: boolean;
  tokenCount: number;
  ownerCount: number;
  transferCount: number;

  blocknumber: String;
  entityId: String;
  chainId: String;
}

export interface ICollectionDailySnapshot extends Document {
  id: String;
  tokenCount: number;
  ownerCount: number;
  dailyTransferCount: number;
  blockNumber: number;
  timestamp: number;
  blocknumber: String;
  entityId: String;
  chainId: String;
}

export interface ITransfer extends Document {
  id: String;
  fromAddress: string;
  toAddress: string;
  tokenAddress: string;
  tokenId: string;
  transferType: string; // mint burn transfer
  transactionFromAddress: string;
  transactionToAddress: string;
  transactionHash: string;
  logIndex: string;
  blockTimestamp: string;
  blockHash: string;
  blocknumber: String;
  entityId: String;
  chainId: String;
}

export interface IAccount extends Document {
  id: String;
  tokenCount: number;
  blocknumber: String;
  entityId: String;
  chainId: String;
}

export interface IAccountBalance extends Document {
  id: String;
  account: string;
  CollectionERC721: string;
  tokenCount: number;
  blockNumber: number;
  timestamp: number;
  blocknumber: String;
  entityId: String;
  chainId: String;
}

export interface IAccountDailySnapshot extends Document {
  id: String;
  account: string;
  CollectionERC721: string;
  tokenCount: number;
  blockNumber: number;
  timestamp: number;
  blocknumber: String;
  entityId: String;
  chainId: String;
}

export interface INonERC721Collection extends Document {
  id: String;
  blocknumber: String;
  entityId: String;
  chainId: String;
}
